name: Randomized GitHub Activity

on:
  schedule:
    - cron: '*/5 * * * *'  # Runs every 5 minutes
  workflow_dispatch:  # Allows manual triggering

jobs:
  commit-bot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate Randomized Commit
        run: |
          # Random delay between 0 and 3600 seconds (1 hour)
          DELAY=$(( RANDOM % 3600 ))
          echo "Sleeping for $DELAY seconds to randomize commit time..."
          sleep $DELAY

          # Random commit messages
          MESSAGES=("Improved documentation" "Refactored some code" "Updated project files" "Minor bug fixes" "Optimized performance")
          COMMIT_MESSAGE=${MESSAGES[$RANDOM % ${#MESSAGES[@]}]}

          # Ensure file changes are detected
          TIMESTAMP=$(date +%s)  # Unique timestamp
          echo "Last updated on $(date) - $TIMESTAMP" > activity_log.txt

      - name: Git operations
        run: |
          git config --global user.name "BL41N3Y"
          git config --global user.email "bl41n3y@gmail.com"

          # Stash any uncommitted changes
          git stash push -m "Auto-stash before pull" || echo "No changes to stash"

          # Pull latest changes from remote branch
          git pull --rebase origin master || git reset --hard origin/master

          # If a merge conflict occurs, automatically resolve it
          if [ -n "$(git ls-files --unmerged)" ]; then
            echo "Merge conflict detected. Resolving automatically..."
            git checkout --ours activity_log.txt
            git add activity_log.txt
          fi

          # Apply the stashed changes (if any)
          if git stash list | grep -q "Auto-stash before pull"; then
            git stash pop
            git add -A  # Ensure all changes are staged
          else
            echo "No stash to apply"
          fi

          # Ensure changes are committed
          if ! git diff --cached --quiet; then
            git commit -m "${COMMIT_MESSAGE:-Auto-commit update}"
            git push --force
          else
            echo "No new changes to commit"
          fi
